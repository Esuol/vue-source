{"remainingRequest":"/Users/berlin/www/personal/github/vueSourceCodeConpile/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/berlin/www/personal/github/vueSourceCodeConpile/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/berlin/www/personal/github/vueSourceCodeConpile/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/berlin/www/personal/github/vueSourceCodeConpile/node_modules/vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/berlin/www/personal/github/vueSourceCodeConpile/docs/prepare/directory.md?vue&type=template&id=133e18de&","dependencies":[{"path":"/Users/berlin/www/personal/github/vueSourceCodeConpile/docs/prepare/directory.md","mtime":1558019468500},{"path":"/Users/berlin/www/personal/github/vueSourceCodeConpile/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/berlin/www/personal/github/vueSourceCodeConpile/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/berlin/www/personal/github/vueSourceCodeConpile/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/berlin/www/personal/github/vueSourceCodeConpile/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/Users/berlin/www/personal/github/vueSourceCodeConpile/node_modules/vuepress/lib/webpack/markdownLoader.js","mtime":1528996848000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _vm._m(0)\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"content\" }, [\n      _c(\"h1\", { attrs: { id: \"vue-js-源码目录设计\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#vue-js-源码目录设计\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" Vue.js 源码目录设计\")\n      ]),\n      _c(\"p\", [_vm._v(\"Vue.js 的源码都在 src 目录下，其目录结构如下。\")]),\n      _c(\"div\", { staticClass: \"language- extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-text\" } }, [\n          _c(\"code\", [\n            _vm._v(\n              \"src\\n├── compiler        # 编译相关 \\n├── core            # 核心代码 \\n├── platforms       # 不同平台的支持\\n├── server          # 服务端渲染\\n├── sfc             # .vue 文件解析\\n├── shared          # 共享代码\\n\"\n            )\n          ])\n        ])\n      ]),\n      _c(\"h2\", { attrs: { id: \"compiler\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#compiler\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" compiler\")\n      ]),\n      _c(\"p\", [\n        _vm._v(\n          \"compiler 目录包含 Vue.js 所有编译相关的代码。它包括把模板解析成 ast 语法树，ast 语法树优化，代码生成等功能。\"\n        )\n      ]),\n      _c(\"p\", [\n        _vm._v(\n          \"编译的工作可以在构建时做（借助 webpack、vue-loader 等辅助插件）；也可以在运行时做，使用包含构建功能的 Vue.js。显然，编译是一项耗性能的工作，所以更推荐前者——离线编译。\"\n        )\n      ]),\n      _c(\"h2\", { attrs: { id: \"core\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#core\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" core\")\n      ]),\n      _c(\"p\", [\n        _vm._v(\n          \"core 目录包含了 Vue.js 的核心代码，包括内置组件、全局 API 封装，Vue 实例化、观察者、虚拟 DOM、工具函数等等。\"\n        )\n      ]),\n      _c(\"p\", [\n        _vm._v(\n          \"这里的代码可谓是 Vue.js 的灵魂，也是我们之后需要重点分析的地方。\"\n        )\n      ]),\n      _c(\"h2\", { attrs: { id: \"platform\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#platform\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" platform\")\n      ]),\n      _c(\"p\", [\n        _vm._v(\n          \"Vue.js 是一个跨平台的 MVVM 框架，它可以跑在 web 上，也可以配合 weex 跑在 native 客户端上。platform 是 Vue.js 的入口，2 个目录代表 2 个主要入口，分别打包成运行在 web 上和 weex 上的 Vue.js。\"\n        )\n      ]),\n      _c(\"p\", [\n        _vm._v(\n          \"我们会重点分析 web 入口打包后的 Vue.js，对于 weex 入口打包的 Vue.js，感兴趣的同学可以自行研究。\"\n        )\n      ]),\n      _c(\"h2\", { attrs: { id: \"server\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#server\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" server\")\n      ]),\n      _c(\"p\", [\n        _vm._v(\n          \"Vue.js 2.0 支持了服务端渲染，所有服务端渲染相关的逻辑都在这个目录下。注意：这部分代码是跑在服务端的 Node.js，不要和跑在浏览器端的 Vue.js 混为一谈。\"\n        )\n      ]),\n      _c(\"p\", [\n        _vm._v(\n          '服务端渲染主要的工作是把组件渲染为服务器端的 HTML 字符串，将它们直接发送到浏览器，最后将静态标记\"混合\"为客户端上完全交互的应用程序。'\n        )\n      ]),\n      _c(\"h2\", { attrs: { id: \"sfc\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#sfc\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" sfc\")\n      ]),\n      _c(\"p\", [\n        _vm._v(\n          \"通常我们开发 Vue.js 都会借助 webpack 构建， 然后通过 .vue 单文件来编写组件。\"\n        )\n      ]),\n      _c(\"p\", [\n        _vm._v(\n          \"这个目录下的代码逻辑会把 .vue 文件内容解析成一个 JavaScript 的对象。\"\n        )\n      ]),\n      _c(\"h2\", { attrs: { id: \"shared\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#shared\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" shared\")\n      ]),\n      _c(\"p\", [\n        _vm._v(\n          \"Vue.js 会定义一些工具方法，这里定义的工具方法都是会被浏览器端的 Vue.js 和服务端的 Vue.js 所共享的。\"\n        )\n      ]),\n      _c(\"h2\", { attrs: { id: \"总结\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#总结\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 总结\")\n      ]),\n      _c(\"p\", [\n        _vm._v(\n          \"从 Vue.js 的目录设计可以看到，作者把功能模块拆分的非常清楚，相关的逻辑放在一个独立的目录下维护，并且把复用的代码也抽成一个独立目录。\"\n        )\n      ]),\n      _c(\"p\", [\n        _vm._v(\n          \"这样的目录设计让代码的阅读性和可维护性都变强，是非常值得学习和推敲的。\"\n        )\n      ])\n    ])\n  }\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}