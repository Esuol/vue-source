{"remainingRequest":"/Users/berlin/www/personal/github/vueSourceCodeConpile/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/berlin/www/personal/github/vueSourceCodeConpile/node_modules/vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/berlin/www/personal/github/vueSourceCodeConpile/docs/prepare/build.md?vue&type=template&id=a1882f86&","dependencies":[{"path":"/Users/berlin/www/personal/github/vueSourceCodeConpile/docs/prepare/build.md","mtime":1558019468333},{"path":"/Users/berlin/www/personal/github/vueSourceCodeConpile/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/berlin/www/personal/github/vueSourceCodeConpile/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/berlin/www/personal/github/vueSourceCodeConpile/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/berlin/www/personal/github/vueSourceCodeConpile/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/Users/berlin/www/personal/github/vueSourceCodeConpile/node_modules/vuepress/lib/webpack/markdownLoader.js","mtime":1528996848000}],"contextDependencies":[],"result":["\n<div class=\"content\"><h1 id=\"vue-js-源码构建\"><a class=\"header-anchor\" href=\"#vue-js-源码构建\" aria-hidden=\"true\">#</a> Vue.js 源码构建</h1>\n<p>Vue.js 源码是基于 <a href=\"https://github.com/rollup/rollup\" target=\"_blank\" rel=\"noopener noreferrer\">Rollup<OutboundLink/></a> 构建的，它的构建相关配置都在 scripts 目录下。</p>\n<h2 id=\"构建脚本\"><a class=\"header-anchor\" href=\"#构建脚本\" aria-hidden=\"true\">#</a> 构建脚本</h2>\n<p>通常一个基于 NPM 托管的项目都会有一个 package.json 文件，它是对项目的描述文件，它的内容实际上是一个标准的 JSON 对象。</p>\n<p>我们通常会配置 <code>script</code> 字段作为 NPM 的执行脚本，Vue.js 源码构建的脚本如下：</p>\n<!--beforebegin--><div class=\"language-json extra-class\"><!--afterbegin--><pre v-pre class=\"language-json\"><code><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"script\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"build\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"node scripts/build.js\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"build:ssr\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"npm run build -- web-runtime-cjs,web-server-renderer\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"build:weex\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"npm run build -- weex\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n \n</code></pre>\n<!--beforeend--></div><!--afterend--><p>这里总共有 3 条命令，作用都是构建 Vue.js，后面 2 条是在第一条命令的基础上，添加一些环境参数。</p>\n<p>当在命令行运行 <code>npm run build</code> 的时候，实际上就会执行 <code>node scripts/build.js</code>，接下来我们来看看它实际是怎么构建的。</p>\n<h2 id=\"构建过程\"><a class=\"header-anchor\" href=\"#构建过程\" aria-hidden=\"true\">#</a> 构建过程</h2>\n<p>我们对于构建过程分析是基于源码的，先打开构建的入口 JS 文件，在 <code>scripts/build.js</code> 中：</p>\n<!--beforebegin--><div class=\"language-js extra-class\"><!--afterbegin--><pre v-pre class=\"language-js\"><code><span class=\"token keyword\">let</span> builds <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./config'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getAllBuilds</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// filter builds via command line arg</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>process<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> filters <span class=\"token operator\">=</span> process<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">','</span><span class=\"token punctuation\">)</span>\n  builds <span class=\"token operator\">=</span> builds<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">b</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> filters<span class=\"token punctuation\">.</span><span class=\"token function\">some</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">f</span> <span class=\"token operator\">=></span> b<span class=\"token punctuation\">.</span>output<span class=\"token punctuation\">.</span>file<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token operator\">||</span> b<span class=\"token punctuation\">.</span>_name<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// filter out weex builds by default</span>\n  builds <span class=\"token operator\">=</span> builds<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">b</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> b<span class=\"token punctuation\">.</span>output<span class=\"token punctuation\">.</span>file<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span><span class=\"token string\">'weex'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">build</span><span class=\"token punctuation\">(</span>builds<span class=\"token punctuation\">)</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><p>这段代码逻辑非常简单，先从配置文件读取配置，再通过命令行参数对构建配置做过滤，这样就可以构建出不同用途的 Vue.js 了。接下来我们看一下配置文件，在 <code>scripts/config.js</code> 中：</p>\n<!--beforebegin--><div class=\"language-js extra-class\"><!--afterbegin--><pre v-pre class=\"language-js\"><code><span class=\"token keyword\">const</span> builds <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Runtime only (CommonJS). Used by bundlers e.g. Webpack &amp; Browserify</span>\n  <span class=\"token string\">'web-runtime-cjs'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    entry<span class=\"token punctuation\">:</span> <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token string\">'web/entry-runtime.js'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    dest<span class=\"token punctuation\">:</span> <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token string\">'dist/vue.runtime.common.js'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    format<span class=\"token punctuation\">:</span> <span class=\"token string\">'cjs'</span><span class=\"token punctuation\">,</span>\n    banner\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">// Runtime+compiler CommonJS build (CommonJS)</span>\n  <span class=\"token string\">'web-full-cjs'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    entry<span class=\"token punctuation\">:</span> <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token string\">'web/entry-runtime-with-compiler.js'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    dest<span class=\"token punctuation\">:</span> <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token string\">'dist/vue.common.js'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    format<span class=\"token punctuation\">:</span> <span class=\"token string\">'cjs'</span><span class=\"token punctuation\">,</span>\n    alias<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> he<span class=\"token punctuation\">:</span> <span class=\"token string\">'./entity-decoder'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    banner\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">// Runtime only (ES Modules). Used by bundlers that support ES Modules,</span>\n  <span class=\"token comment\">// e.g. Rollup &amp; Webpack 2</span>\n  <span class=\"token string\">'web-runtime-esm'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    entry<span class=\"token punctuation\">:</span> <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token string\">'web/entry-runtime.js'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    dest<span class=\"token punctuation\">:</span> <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token string\">'dist/vue.runtime.esm.js'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    format<span class=\"token punctuation\">:</span> <span class=\"token string\">'es'</span><span class=\"token punctuation\">,</span>\n    banner\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">// Runtime+compiler CommonJS build (ES Modules)</span>\n  <span class=\"token string\">'web-full-esm'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    entry<span class=\"token punctuation\">:</span> <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token string\">'web/entry-runtime-with-compiler.js'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    dest<span class=\"token punctuation\">:</span> <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token string\">'dist/vue.esm.js'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    format<span class=\"token punctuation\">:</span> <span class=\"token string\">'es'</span><span class=\"token punctuation\">,</span>\n    alias<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> he<span class=\"token punctuation\">:</span> <span class=\"token string\">'./entity-decoder'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    banner\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">// runtime-only build (Browser)</span>\n  <span class=\"token string\">'web-runtime-dev'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    entry<span class=\"token punctuation\">:</span> <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token string\">'web/entry-runtime.js'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    dest<span class=\"token punctuation\">:</span> <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token string\">'dist/vue.runtime.js'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    format<span class=\"token punctuation\">:</span> <span class=\"token string\">'umd'</span><span class=\"token punctuation\">,</span>\n    env<span class=\"token punctuation\">:</span> <span class=\"token string\">'development'</span><span class=\"token punctuation\">,</span>\n    banner\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">// runtime-only production build (Browser)</span>\n  <span class=\"token string\">'web-runtime-prod'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    entry<span class=\"token punctuation\">:</span> <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token string\">'web/entry-runtime.js'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    dest<span class=\"token punctuation\">:</span> <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token string\">'dist/vue.runtime.min.js'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    format<span class=\"token punctuation\">:</span> <span class=\"token string\">'umd'</span><span class=\"token punctuation\">,</span>\n    env<span class=\"token punctuation\">:</span> <span class=\"token string\">'production'</span><span class=\"token punctuation\">,</span>\n    banner\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">// Runtime+compiler development build (Browser)</span>\n  <span class=\"token string\">'web-full-dev'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    entry<span class=\"token punctuation\">:</span> <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token string\">'web/entry-runtime-with-compiler.js'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    dest<span class=\"token punctuation\">:</span> <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token string\">'dist/vue.js'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    format<span class=\"token punctuation\">:</span> <span class=\"token string\">'umd'</span><span class=\"token punctuation\">,</span>\n    env<span class=\"token punctuation\">:</span> <span class=\"token string\">'development'</span><span class=\"token punctuation\">,</span>\n    alias<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> he<span class=\"token punctuation\">:</span> <span class=\"token string\">'./entity-decoder'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    banner\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">// Runtime+compiler production build  (Browser)</span>\n  <span class=\"token string\">'web-full-prod'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    entry<span class=\"token punctuation\">:</span> <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token string\">'web/entry-runtime-with-compiler.js'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    dest<span class=\"token punctuation\">:</span> <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token string\">'dist/vue.min.js'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    format<span class=\"token punctuation\">:</span> <span class=\"token string\">'umd'</span><span class=\"token punctuation\">,</span>\n    env<span class=\"token punctuation\">:</span> <span class=\"token string\">'production'</span><span class=\"token punctuation\">,</span>\n    alias<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> he<span class=\"token punctuation\">:</span> <span class=\"token string\">'./entity-decoder'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    banner\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><p>这里列举了一些 Vue.js 构建的配置，关于还有一些服务端渲染 webpack 插件以及 weex 的打包配置就不列举了。</p>\n<p>对于单个配置，它是遵循 Rollup 的构建规则的。其中 <code>entry</code> 属性表示构建的入口 JS 文件地址，<code>dest</code> 属性表示构建后的 JS 文件地址。<code>format</code> 属性表示构建的格式，<code>cjs</code> 表示构建出来的文件遵循 <a href=\"http://wiki.commonjs.org/wiki/Modules/1.1\" target=\"_blank\" rel=\"noopener noreferrer\">CommonJS<OutboundLink/></a> 规范，<code>es</code> 表示构建出来的文件遵循 <a href=\"http://exploringjs.com/es6/ch_modules.html\" target=\"_blank\" rel=\"noopener noreferrer\">ES Module<OutboundLink/></a> 规范。 <code>umd</code> 表示构建出来的文件遵循 <a href=\"https://github.com/umdjs/umd\" target=\"_blank\" rel=\"noopener noreferrer\">UMD<OutboundLink/></a> 规范。</p>\n<p>以 <code>web-runtime-cjs</code> 配置为例，它的 <code>entry</code> 是\n<code>resolve('web/entry-runtime.js')</code>，先来看一下 <code>resolve</code> 函数的定义。</p>\n<p>源码目录：<code>scripts/config.js</code></p>\n<!--beforebegin--><div class=\"language-js extra-class\"><!--afterbegin--><pre v-pre class=\"language-js\"><code><span class=\"token keyword\">const</span> aliases <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./alias'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">resolve</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">p</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> base <span class=\"token operator\">=</span> p<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>aliases<span class=\"token punctuation\">[</span>base<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>aliases<span class=\"token punctuation\">[</span>base<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span>base<span class=\"token punctuation\">.</span>length <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">'../'</span><span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><p>这里的 <code>resolve</code> 函数实现非常简单，它先把 <code>resolve</code> 函数传入的参数 <code>p</code> 通过 <code>/</code> 做了分割成数组，然后取数组第一个元素设置为 <code>base</code>。在我们这个例子中，参数 <code>p</code> 是 <code>web/entry-runtime.js</code>，那么 <code>base</code> 则为 <code>web</code>。<code>base</code> 并不是实际的路径，它的真实路径借助了别名的配置，我们来看一下别名配置的代码，在 <code>scripts/alias</code> 中：</p>\n<!--beforebegin--><div class=\"language-js extra-class\"><!--afterbegin--><pre v-pre class=\"language-js\"><code><span class=\"token keyword\">const</span> path <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'path'</span><span class=\"token punctuation\">)</span>\n\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  vue<span class=\"token punctuation\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">'../src/platforms/web/entry-runtime-with-compiler'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  compiler<span class=\"token punctuation\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">'../src/compiler'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  core<span class=\"token punctuation\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">'../src/core'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  shared<span class=\"token punctuation\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">'../src/shared'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  web<span class=\"token punctuation\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">'../src/platforms/web'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  weex<span class=\"token punctuation\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">'../src/platforms/weex'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  server<span class=\"token punctuation\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">'../src/server'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  entries<span class=\"token punctuation\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">'../src/entries'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  sfc<span class=\"token punctuation\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">'../src/sfc'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><p>很显然，这里 <code>web</code> 对应的真实的路径是 <code>path.resolve(__dirname, '../src/platforms/web')</code>，这个路径就找到了 Vue.js 源码的 web 目录。然后 <code>resolve</code> 函数通过 <code>path.resolve(aliases[base], p.slice(base.length + 1))</code> 找到了最终路径，它就是 Vue.js 源码 web 目录下的 <code>entry-runtime.js</code>。因此，<code>web-runtime-cjs</code> 配置对应的入口文件就找到了。</p>\n<p>它经过 Rollup 的构建打包后，最终会在 dist 目录下生成 <code>vue.runtime.common.js</code>。</p>\n<h2 id=\"runtime-only-vs-runtime-compiler\"><a class=\"header-anchor\" href=\"#runtime-only-vs-runtime-compiler\" aria-hidden=\"true\">#</a> Runtime Only VS Runtime + Compiler</h2>\n<p>通常我们利用 vue-cli 去初始化我们的 Vue.js 项目的时候会询问我们用 Runtime Only 版本的还是 Runtime + Compiler 版本。下面我们来对比这两个版本。</p>\n<ul>\n<li>Runtime Only</li>\n</ul>\n<p>我们在使用 Runtime Only 版本的 Vue.js 的时候，通常需要借助如 webpack 的 vue-loader 工具把 .vue 文件编译成 JavaScript，因为是在编译阶段做的，所以它只包含运行时的 Vue.js 代码，因此代码体积也会更轻量。</p>\n<ul>\n<li>Runtime + Compiler</li>\n</ul>\n<p>我们如果没有对代码做预编译，但又使用了 Vue 的 template 属性并传入一个字符串，则需要在客户端编译模板，如下所示：</p>\n<!--beforebegin--><div class=\"language-js extra-class\"><!--afterbegin--><pre v-pre class=\"language-js\"><code><span class=\"token comment\">// 需要编译器的版本</span>\n<span class=\"token keyword\">new</span> <span class=\"token class-name\">Vue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  template<span class=\"token punctuation\">:</span> <span class=\"token string\">'&lt;div>{{ hi }}&lt;/div>'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// 这种情况不需要</span>\n<span class=\"token keyword\">new</span> <span class=\"token class-name\">Vue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token function\">render</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">h</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">h</span><span class=\"token punctuation\">(</span><span class=\"token string\">'div'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>hi<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><p>因为在 Vue.js 2.0 中，最终渲染都是通过 <code>render</code> 函数，如果写 <code>template</code> 属性，则需要编译成 <code>render</code> 函数，那么这个编译过程会发生运行时，所以需要带有编译器的版本。</p>\n<p>很显然，这个编译过程对性能会有一定损耗，所以通常我们更推荐使用 Runtime-Only 的 Vue.js。</p>\n<h2 id=\"总结\"><a class=\"header-anchor\" href=\"#总结\" aria-hidden=\"true\">#</a> 总结</h2>\n<p>通过这一节的分析，我们可以了解到 Vue.js 的构建打包过程，也知道了不同作用和功能的 Vue.js 它们对应的入口以及最终编译生成的 JS 文件。尽管在实际开发过程中我们会用 Runtime Only 版本开发比较多，但为了分析 Vue 的编译过程，我们这门课重点分析的源码是 Runtime + Compiler 的 Vue.js。</p>\n</div>\n",null]}